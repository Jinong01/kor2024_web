정적 파일 : HTML , CSS , JS , IMG 등등
    - 순수한 확장자의 언어만 사용이 가능하다. HTML 에는 HTML 문법만 사용이 가능하다.

동적 파일 : JSP , 타임리프 , 머스테치 , JSX 파일 *템플릿 / 나온 이유 : 개발자 위해
    - 서로 조합된 언어들을 사용이 가능하다. JSP 에는 HTML 과 JAVA 문법이 사용 가능하다.
        * JSP : HTML+JAVA,      타임리프 : HTML+타임리프언어(JAVA 기반)
        머스테치 : HTML+머스테치언어(JAVA 기반),      REACT JSX : HTML+JS 언어
    - 하나의 언어가 아닌 2개 이상의 언어가 합쳐진 문법 이므로 렌더링이 필요하다.
        ***** 사용자는 브라우저(크롬/엣지/사파리)를 통해 화면 제공받는다.
              브라우저는 정적파일(HTML/CSS/JS/IMG) 만 인식이 가능하다.
        ?? 특정한 (spring) 서버들이 조합된 언어들을 렌더링해서 순수한 정적파일로 변경해준다.

[ 템플릿 ]
    - 어떤 것을 만들 때 안내 역할을 하는 형식
    1. 정의 : 동적파일로 이루어진 확장자 이면서 특정한 서버들이 컴파일하는 과정에서 순수한 HTML 로 만들어낸다.
    2. 종류 : JSP , JSX , 타임리프 , 머스테치 등등
        --> 스프링 회사에서 공식적으로 타임리프 지원한다.


[ 타임리프 ]
    1. 정의 : 여러 템플릿 종류 중 하나로써 템플릿 엔진, 주로 서버에서 동적으로 렌더링 된 결과를 정적파일로 반환
        * 다른 템플릿과 다르게 확장자를 .html 로 사용한다.
    2. 목적 : (1) HTML 이 지원하지 않는 기능 사용 (2) 동적 웹페이지 (3) 간결한 문법 등등
    3. 내 프로젝트에 타임리프 적용하는 방법
        1/ thymeleaf 의존성 추가
    4. 스프링에서 타임리프 파일을 만드는 방법
        resources -> static : 정적파일
                  -> templates : 동적파일
 * 공통적인 html 코드를 재사용 하기 위해 사용한다. ex] header , footer

[ 실습1 ]
    resources -> static -> day58 -> index.html
    - 요청 URL, 서버위치한 PC 주소 : 서버포트번호/day58/index.html
              -> templates -> day58 -> index.html
    - 요청 URL 은 없다. Controller 에서 URL 정의한다. @Controller

    5. HTML 과 다르게 타임리프가 제공하는 기능
        1. 레이아웃 문법 제공
            : html 파일에 다른 html 첨부할 수 있다.
        2. 레이아웃 문법 사용법
            (1) 다른 파일 (html)에서 불러올 마크업에 플로그를 정의한다.
                * 불러올 마크업에 플로그명은 임의로 가능하다.
                <마크업 th:fragment="플로그명"></마크업>
            (2) 불러올 마크업이 플로그가 정의 되었다면 플로그 호출하기
                <마크업 th:replace="~{불러올 html 파일 경로 :: 플로그명}"></마크업>

            - th:fragment="플로그명" : 해당 마크업에 플로그를 정의
            - th:replace="~{경로포함 파일명.html :: 플로그명}""
                : 해당 파일명의 지정한 플로그로 설정된 마크업을 불러오는 문법

        * 타임리프 문법 시작은 th:키워드

    6. 동적파일(타임리프) HTTP 의 URL 정의하기